{"kind":"AuthEngineMount","apiVersion":"v1alpha1","displayName":"Auth Engine Mount","format":"JSON","metadata":{},"model":{"name":"vault-config-operator","version":"0.8.4","modelDisplayName":"vault-config-operator","category":"","subCategory":""},"schema":"{\n \"description\": \"AuthEngineMountSpec defines the desired state of AuthEngineMount\",\n \"properties\": {\n  \"authentication\": {\n   \"description\": \"Authentication is the kube auth configuration to be used to execute this request\",\n   \"properties\": {\n    \"namespace\": {\n     \"description\": \"Namespace is the Vault namespace to be used in all the operations withing this connection/authentication. Only available in Vault Enterprise.\",\n     \"type\": \"string\"\n    },\n    \"path\": {\n     \"default\": \"kubernetes\",\n     \"description\": \"Path is the path of the role used for this kube auth authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}\",\n     \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n     \"type\": \"string\"\n    },\n    \"role\": {\n     \"description\": \"Role the role to be used during authentication\",\n     \"type\": \"string\"\n    },\n    \"serviceAccount\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ServiceAccount is the service account used for the kube auth authentication\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"config\": {\n   \"description\": \"Config Specifies configuration options for this auth method.\",\n   \"properties\": {\n    \"allowedResponseHeaders\": {\n     \"description\": \"AllowedResponseHeaders list of headers to whitelist, allowing a plugin to include them in the response. kubebuilder:validation:UniqueItems=true\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    },\n    \"auditNonHMACRequestKeys\": {\n     \"description\": \"AuditNonHMACRequestKeys list of keys that will not be HMAC'd by audit devices in the request data object. kubebuilder:validation:UniqueItems=true\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    },\n    \"auditNonHMACResponseKeys\": {\n     \"description\": \"AuditNonHMACResponseKeys list of keys that will not be HMAC'd by audit devices in the response data object. kubebuilder:validation:UniqueItems=true\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    },\n    \"defaultLeaseTTL\": {\n     \"description\": \"DefaultLeaseTTL  The default lease duration, specified as a string duration like \\\"5s\\\" or \\\"30m\\\".\",\n     \"type\": \"string\"\n    },\n    \"description\": {\n     \"description\": \"Description another description...\",\n     \"type\": \"string\"\n    },\n    \"listingVisibility\": {\n     \"default\": \"hidden\",\n     \"description\": \"ListingVisibility Specifies whether to show this mount in the UI-specific listing endpoint. Valid values are \\\"unauth\\\" or \\\"hidden\\\". If not set, behaves like \\\"hidden\\\"\",\n     \"enum\": [\n      \"unauth\",\n      \"hidden\"\n     ],\n     \"type\": \"string\"\n    },\n    \"maxLeaseTTL\": {\n     \"description\": \"MaxLeaseTTL The maximum lease duration, specified as a string duration like \\\"5s\\\" or \\\"30m\\\".\",\n     \"type\": \"string\"\n    },\n    \"options\": {\n     \"additionalProperties\": {\n      \"type\": \"string\"\n     },\n     \"description\": \"Options undocumented\",\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"granular\"\n    },\n    \"passthroughRequestHeaders\": {\n     \"description\": \"PassthroughRequestHeaders list of headers to whitelist and pass from the request to the plugin. kubebuilder:validation:UniqueItems=true\",\n     \"items\": {\n      \"type\": \"string\"\n     },\n     \"type\": \"array\",\n     \"x-kubernetes-list-type\": \"set\"\n    },\n    \"tokenType\": {\n     \"description\": \"TokenType undocumented\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"connection\": {\n   \"description\": \"Connection represents the information needed to connect to Vault. This operator uses the standard Vault environment variables to connect to Vault. If you need to override those settings and for example connect to a different Vault instance, you can do with this section of the CR.\",\n   \"properties\": {\n    \"address\": {\n     \"description\": \"Address Address of the Vault server expressed as a URL and port, for example: https://127.0.0.1:8200/\",\n     \"type\": \"string\"\n    },\n    \"maxRetries\": {\n     \"description\": \"MaxRetries Maximum number of retries when certain error codes are encountered. The default is 2, for three total attempts. Set this to 0 or less to disable retrying. Error codes that are retried are 412 (client consistency requirement not satisfied) and all 5xx except for 501 (not implemented).\",\n     \"type\": \"integer\"\n    },\n    \"tLSConfig\": {\n     \"properties\": {\n      \"cacert\": {\n       \"description\": \"Cacert Path to a PEM-encoded CA certificate file on the local disk. This file is used to verify the Vault server's SSL certificate. This environment variable takes precedence over a cert passed via the secret.\",\n       \"type\": \"string\"\n      },\n      \"skipVerify\": {\n       \"description\": \"SkipVerify Do not verify Vault's presented certificate before communicating with it. Setting this variable is not recommended and voids Vault's security model.\",\n       \"type\": \"boolean\"\n      },\n      \"tlsSecret\": {\n       \"description\": \"TLSSecret namespace-local secret containing the tls material for the connection. the expected keys for the secret are: ca bundle -\\u003e \\\"ca.crt\\\", certificate -\\u003e \\\"tls.crt\\\", key -\\u003e \\\"tls.key\\\"\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"tlsServerName\": {\n       \"description\": \"TLSServerName Name to use as the SNI host when connecting via TLS.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timeOut\": {\n     \"description\": \"Timeout Timeout variable. The default value is 60s.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"description\": {\n   \"description\": \"Description Specifies a human-friendly description of the auth method.\",\n   \"type\": \"string\"\n  },\n  \"local\": {\n   \"default\": true,\n   \"description\": \"Local Specifies if the auth method is local only. Local auth methods are not replicated nor (if a secondary) removed by replication. Logins via local auth methods do not make use of identity, i.e. no entity or groups will be attached to the token.\",\n   \"type\": \"boolean\"\n  },\n  \"path\": {\n   \"description\": \"Path at which this auth engine will be mounted The final path will be {[spec.authentication.namespace]}/auth/{spec.path}/{metadata.name}. The authentication role must have the following capabilities = [ \\\"create\\\", \\\"read\\\", \\\"update\\\", \\\"delete\\\"] on that path /sys/auth/{[spec.authentication.namespace]}/{spec.path}/{metadata.name}.\",\n   \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n   \"type\": \"string\"\n  },\n  \"sealwrap\": {\n   \"default\": true,\n   \"description\": \"SealWrap Enable seal wrapping for the mount, causing values stored by the mount to be wrapped by the seal's encryption capability.\",\n   \"type\": \"boolean\"\n  },\n  \"type\": {\n   \"description\": \"Type Specifies the name of the authentication method type, such as \\\"github\\\" or \\\"token\\\".\",\n   \"type\": \"string\"\n  }\n },\n \"title\": \"Auth Engine Mount\",\n \"type\": \"object\"\n}"}