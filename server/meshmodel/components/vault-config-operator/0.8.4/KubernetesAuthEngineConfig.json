{"kind":"KubernetesAuthEngineConfig","apiVersion":"v1alpha1","displayName":"Kubernetes Auth Engine Config","format":"JSON","metadata":{},"model":{"name":"vault-config-operator","version":"0.8.4","modelDisplayName":"vault-config-operator","category":"","subCategory":""},"schema":"{\n \"description\": \"KubernetesAuthEngineConfigSpec defines the desired state of KubernetesAuthEngineConfig\",\n \"properties\": {\n  \"PEMKeys\": {\n   \"description\": \"PEMKeys Optional list of PEM-formatted public keys or certificates used to verify the signatures of Kubernetes service account JWTs. If a certificate is given, its public key will be extracted. Not every installation of Kubernetes exposes these keys.\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"authentication\": {\n   \"description\": \"Authentication is the kube auth configuration to be used to execute this request\",\n   \"properties\": {\n    \"namespace\": {\n     \"description\": \"Namespace is the Vault namespace to be used in all the operations withing this connection/authentication. Only available in Vault Enterprise.\",\n     \"type\": \"string\"\n    },\n    \"path\": {\n     \"default\": \"kubernetes\",\n     \"description\": \"Path is the path of the role used for this kube auth authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}\",\n     \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n     \"type\": \"string\"\n    },\n    \"role\": {\n     \"description\": \"Role the role to be used during authentication\",\n     \"type\": \"string\"\n    },\n    \"serviceAccount\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ServiceAccount is the service account used for the kube auth authentication\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"connection\": {\n   \"description\": \"Connection represents the information needed to connect to Vault. This operator uses the standard Vault environment variables to connect to Vault. If you need to override those settings and for example connect to a different Vault instance, you can do with this section of the CR.\",\n   \"properties\": {\n    \"address\": {\n     \"description\": \"Address Address of the Vault server expressed as a URL and port, for example: https://127.0.0.1:8200/\",\n     \"type\": \"string\"\n    },\n    \"maxRetries\": {\n     \"description\": \"MaxRetries Maximum number of retries when certain error codes are encountered. The default is 2, for three total attempts. Set this to 0 or less to disable retrying. Error codes that are retried are 412 (client consistency requirement not satisfied) and all 5xx except for 501 (not implemented).\",\n     \"type\": \"integer\"\n    },\n    \"tLSConfig\": {\n     \"properties\": {\n      \"cacert\": {\n       \"description\": \"Cacert Path to a PEM-encoded CA certificate file on the local disk. This file is used to verify the Vault server's SSL certificate. This environment variable takes precedence over a cert passed via the secret.\",\n       \"type\": \"string\"\n      },\n      \"skipVerify\": {\n       \"description\": \"SkipVerify Do not verify Vault's presented certificate before communicating with it. Setting this variable is not recommended and voids Vault's security model.\",\n       \"type\": \"boolean\"\n      },\n      \"tlsSecret\": {\n       \"description\": \"TLSSecret namespace-local secret containing the tls material for the connection. the expected keys for the secret are: ca bundle -\\u003e \\\"ca.crt\\\", certificate -\\u003e \\\"tls.crt\\\", key -\\u003e \\\"tls.key\\\"\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"tlsServerName\": {\n       \"description\": \"TLSServerName Name to use as the SNI host when connecting via TLS.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timeOut\": {\n     \"description\": \"Timeout Timeout variable. The default value is 60s.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"disableISSValidation\": {\n   \"default\": false,\n   \"description\": \"DisableISSValidation Disable JWT issuer validation. Allows to skip ISS validation.\",\n   \"type\": \"boolean\"\n  },\n  \"disableLocalCAJWT\": {\n   \"default\": false,\n   \"description\": \"DisableLocalCAJWT Disable defaulting to the local CA cert and service account JWT when running in a Kubernetes pod.\",\n   \"type\": \"boolean\"\n  },\n  \"issuer\": {\n   \"description\": \"Issuer Optional JWT issuer. If no issuer is specified, then this plugin will use kubernetes/serviceaccount as the default issuer. See these instructions for looking up the issuer for a given Kubernetes cluster.\",\n   \"type\": \"string\"\n  },\n  \"kubernetesCACert\": {\n   \"description\": \"kubernetesCACert PEM encoded CA cert for use by the TLS client used to talk with the Kubernetes API. NOTE: Every line must end with a newline: \\\\n if omitted will default to the content of the file \\\"/var/run/secrets/kubernetes.io/serviceaccount/ca.crt\\\" in the operator pod\",\n   \"type\": \"string\"\n  },\n  \"kubernetesHost\": {\n   \"default\": \"https://kubernetes.default.svc:443\",\n   \"description\": \"KubernetesHost Host must be a host string, a host:port pair, or a URL to the base of the Kubernetes API server.\",\n   \"type\": \"string\"\n  },\n  \"path\": {\n   \"description\": \"Path at which to make the configuration. The final path will be {[spec.authentication.namespace]}/auth/{spec.path}/config/{metadata.name}. The authentication role must have the following capabilities = [ \\\"create\\\", \\\"read\\\", \\\"update\\\", \\\"delete\\\"] on that path.\",\n   \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n   \"type\": \"string\"\n  },\n  \"tokenReviewerServiceAccount\": {\n   \"default\": {\n    \"name\": \"default\"\n   },\n   \"description\": \"TokenReviewerServiceAccount A service account JWT used to access the TokenReview API to validate other JWTs during login. If not set, the JWT submitted in the login payload will be used to access the Kubernetes TokenReview API.\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\",\n   \"x-kubernetes-map-type\": \"atomic\"\n  }\n },\n \"title\": \"Kubernetes Auth Engine Config\",\n \"type\": \"object\"\n}"}