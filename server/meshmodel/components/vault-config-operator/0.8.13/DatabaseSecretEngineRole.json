{"kind":"DatabaseSecretEngineRole","apiVersion":"v1alpha1","displayName":"Database Secret Engine Role","format":"JSON","metadata":{},"model":{"name":"vault-config-operator","version":"0.8.13","displayName":"vault-config-operator","category":{"name":"","metadata":null},"metadata":null},"schema":"{\n \"description\": \"DatabaseSecretEngineRoleSpec defines the desired state of DatabaseSecretEngineRole\",\n \"properties\": {\n  \"authentication\": {\n   \"description\": \"Authentication is the kube auth configuration to be used to execute this request\",\n   \"properties\": {\n    \"namespace\": {\n     \"description\": \"Namespace is the Vault namespace to be used in all the operations withing this connection/authentication. Only available in Vault Enterprise.\",\n     \"type\": \"string\"\n    },\n    \"path\": {\n     \"default\": \"kubernetes\",\n     \"description\": \"Path is the path of the role used for this kube auth authentication. The operator will try to authenticate at {[namespace/]}auth/{spec.path}\",\n     \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n     \"type\": \"string\"\n    },\n    \"role\": {\n     \"description\": \"Role the role to be used during authentication\",\n     \"type\": \"string\"\n    },\n    \"serviceAccount\": {\n     \"default\": {\n      \"name\": \"default\"\n     },\n     \"description\": \"ServiceAccount is the service account used for the kube auth authentication\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\",\n     \"x-kubernetes-map-type\": \"atomic\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"connection\": {\n   \"description\": \"Connection represents the information needed to connect to Vault. This operator uses the standard Vault environment variables to connect to Vault. If you need to override those settings and for example connect to a different Vault instance, you can do with this section of the CR.\",\n   \"properties\": {\n    \"address\": {\n     \"description\": \"Address Address of the Vault server expressed as a URL and port, for example: https://127.0.0.1:8200/\",\n     \"type\": \"string\"\n    },\n    \"maxRetries\": {\n     \"description\": \"MaxRetries Maximum number of retries when certain error codes are encountered. The default is 2, for three total attempts. Set this to 0 or less to disable retrying. Error codes that are retried are 412 (client consistency requirement not satisfied) and all 5xx except for 501 (not implemented).\",\n     \"type\": \"integer\"\n    },\n    \"tLSConfig\": {\n     \"properties\": {\n      \"cacert\": {\n       \"description\": \"Cacert Path to a PEM-encoded CA certificate file on the local disk. This file is used to verify the Vault server's SSL certificate. This environment variable takes precedence over a cert passed via the secret.\",\n       \"type\": \"string\"\n      },\n      \"skipVerify\": {\n       \"description\": \"SkipVerify Do not verify Vault's presented certificate before communicating with it. Setting this variable is not recommended and voids Vault's security model.\",\n       \"type\": \"boolean\"\n      },\n      \"tlsSecret\": {\n       \"description\": \"TLSSecret namespace-local secret containing the tls material for the connection. the expected keys for the secret are: ca bundle -\\u003e \\\"ca.crt\\\", certificate -\\u003e \\\"tls.crt\\\", key -\\u003e \\\"tls.key\\\"\",\n       \"properties\": {\n        \"name\": {\n         \"description\": \"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names TODO: Add other useful fields. apiVersion, kind, uid?\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\",\n       \"x-kubernetes-map-type\": \"atomic\"\n      },\n      \"tlsServerName\": {\n       \"description\": \"TLSServerName Name to use as the SNI host when connecting via TLS.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"timeOut\": {\n     \"description\": \"Timeout Timeout variable. The default value is 60s.\",\n     \"type\": \"string\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"creationStatements\": {\n   \"description\": \"CreationStatements Specifies the database statements executed to create and configure a user. See the plugin's API page for more information on support and formatting for this parameter. kubebuilder:validation:UniqueItems=true\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-type\": \"set\"\n  },\n  \"dBName\": {\n   \"description\": \"DBName The name of the database connection to use for this role.\",\n   \"type\": \"string\"\n  },\n  \"defaultTTL\": {\n   \"default\": \"0s\",\n   \"description\": \"DeafulTTL Specifies the TTL for the leases associated with this role. Accepts time suffixed strings (\\\"1h\\\") or an integer number of seconds. Defaults to system/engine default TTL time.\",\n   \"type\": \"string\"\n  },\n  \"maxTTL\": {\n   \"default\": \"0s\",\n   \"description\": \"MaxTTL Specifies the maximum TTL for the leases associated with this role. Accepts time suffixed strings (\\\"1h\\\") or an integer number of seconds. Defaults to system/mount default TTL time; this value is allowed to be less than the mount max TTL (or, if not set, the system max TTL), but it is not allowed to be longer. See also The TTL General Case.\",\n   \"type\": \"string\"\n  },\n  \"path\": {\n   \"description\": \"Path at which to create the role. The final path will be {[spec.authentication.namespace]}/{spec.path}/roles/{metadata.name}. The authentication role must have the following capabilities = [ \\\"create\\\", \\\"read\\\", \\\"update\\\", \\\"delete\\\"] on that path.\",\n   \"pattern\": \"^(?:/?[\\\\w;:@\\u0026=\\\\$-\\\\.\\\\+]*)+/?\",\n   \"type\": \"string\"\n  },\n  \"renewStatements\": {\n   \"description\": \"RenewStatements Specifies the database statements to be executed to renew a user. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter. kubebuilder:validation:UniqueItems=true\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-type\": \"set\"\n  },\n  \"revocationStatements\": {\n   \"description\": \"RevocationStatements Specifies the database statements to be executed to revoke a user. See the plugin's API page for more information on support and formatting for this parameter. kubebuilder:validation:UniqueItems=true\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-type\": \"set\"\n  },\n  \"rollbackStatements\": {\n   \"description\": \"RollbackStatements Specifies the database statements to be executed to rollback a create operation in the event of an error. Not every plugin type will support this functionality. See the plugin's API page for more information on support and formatting for this parameter. kubebuilder:validation:UniqueItems=true\",\n   \"items\": {\n    \"type\": \"string\"\n   },\n   \"type\": \"array\",\n   \"x-kubernetes-list-type\": \"set\"\n  }\n },\n \"title\": \"Database Secret Engine Role\",\n \"type\": \"object\"\n}"}