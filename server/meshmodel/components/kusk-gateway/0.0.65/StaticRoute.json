{"kind":"StaticRoute","apiVersion":"v1alpha1","displayName":"Static Route","format":"JSON","metadata":{},"model":{"name":"kusk-gateway","version":"0.0.65","displayName":"kusk-gateway","category":{"name":"","metadata":null},"metadata":null},"schema":"{\n \"description\": \"StaticRouteSpec defines the desired state of StaticRoute\",\n \"properties\": {\n  \"auth\": {\n   \"properties\": {\n    \"cloudentity\": {\n     \"description\": \"OPTIONAL\",\n     \"properties\": {\n      \"host\": {\n       \"description\": \"REQUIRED.\",\n       \"properties\": {\n        \"hostname\": {\n         \"description\": \"REQUIRED.\",\n         \"type\": \"string\"\n        },\n        \"path\": {\n         \"description\": \"OPTIONAL.\",\n         \"type\": \"string\"\n        },\n        \"port\": {\n         \"description\": \"REQUIRED.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"path_prefix\": {\n       \"description\": \"OPTIONAL.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"custom\": {\n     \"description\": \"OPTIONAL\",\n     \"properties\": {\n      \"host\": {\n       \"description\": \"REQUIRED.\",\n       \"properties\": {\n        \"hostname\": {\n         \"description\": \"REQUIRED.\",\n         \"type\": \"string\"\n        },\n        \"path\": {\n         \"description\": \"OPTIONAL.\",\n         \"type\": \"string\"\n        },\n        \"port\": {\n         \"description\": \"REQUIRED.\",\n         \"format\": \"int32\",\n         \"type\": \"integer\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"path_prefix\": {\n       \"description\": \"OPTIONAL.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    },\n    \"oauth2\": {\n     \"description\": \"OPTIONAL\",\n     \"properties\": {\n      \"auth_scopes\": {\n       \"description\": \"Optional list of OAuth scopes to be claimed in the authorization request. If not specified, defaults to “user” scope. OAuth RFC https://tools.ietf.org/html/rfc6749#section-3.3. OPTIONAL.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"authorization_endpoint\": {\n       \"description\": \"The endpoint redirect to for authorization in response to unauthorized requests. REQUIRED.\",\n       \"type\": \"string\"\n      },\n      \"credentials\": {\n       \"description\": \"Credentials used for OAuth. REQUIRED.\",\n       \"properties\": {\n        \"client_id\": {\n         \"description\": \"REQUIRED.\",\n         \"type\": \"string\"\n        },\n        \"client_secret\": {\n         \"description\": \"REQUIRED, if `client_secret_ref` is not set, i.e., mutually exclusive with `client_secret_ref`.\",\n         \"type\": \"string\"\n        },\n        \"client_secret_ref\": {\n         \"description\": \"REQUIRED, if `client_secret` is not set, i.e., mutually exclusive with `client_secret`.\",\n         \"properties\": {\n          \"name\": {\n           \"description\": \"REQUIRED.\",\n           \"type\": \"string\"\n          },\n          \"namespace\": {\n           \"description\": \"REQUIRED.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"cookie_names\": {\n         \"description\": \"OPTIONAL.\",\n         \"properties\": {\n          \"bearer_token\": {\n           \"description\": \"Defaults to BearerToken.\",\n           \"type\": \"string\"\n          },\n          \"oauth_expires\": {\n           \"description\": \"Defaults to OauthExpires.\",\n           \"type\": \"string\"\n          },\n          \"oauth_hmac\": {\n           \"description\": \"Defaults to OauthHMAC.\",\n           \"type\": \"string\"\n          }\n         },\n         \"type\": \"object\"\n        },\n        \"hmac_secret\": {\n         \"description\": \"OPTIONAL.\",\n         \"type\": \"string\"\n        }\n       },\n       \"type\": \"object\"\n      },\n      \"forward_bearer_token\": {\n       \"description\": \"Forward the OAuth token as a Bearer to upstream web service. When the authn server validates the client and returns an authorization token back to the OAuth filter, no matter what format that token is, if forward_bearer_token is set to true the filter will send over a cookie named BearerToken to the upstream. Additionally, the Authorization header will be populated with the same value. REQUIRED.\",\n       \"type\": \"boolean\"\n      },\n      \"pass_through_matcher\": {\n       \"description\": \"Any request that matches any of the provided matchers will be passed through without OAuth validation. OPTIONAL.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"redirect_path_matcher\": {\n       \"description\": \"Matching criteria used to determine whether a path appears to be the result of a redirect from the authorization server. REQUIRED.\",\n       \"type\": \"string\"\n      },\n      \"redirect_uri\": {\n       \"description\": \"The redirect URI passed to the authorization endpoint. Supports header formatting tokens. REQUIRED.\",\n       \"type\": \"string\"\n      },\n      \"resources\": {\n       \"description\": \"Optional resource parameter for authorization request RFC: https://tools.ietf.org/html/rfc8707. OPTIONAL.\",\n       \"items\": {\n        \"type\": \"string\"\n       },\n       \"type\": \"array\"\n      },\n      \"signout_path\": {\n       \"description\": \"The path to sign a user out, clearing their credential cookies. REQUIRED.\",\n       \"type\": \"string\"\n      },\n      \"token_endpoint\": {\n       \"description\": \"Endpoint on the authorization server to retrieve the access token from. REQUIRED.\",\n       \"type\": \"string\"\n      }\n     },\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  },\n  \"fleet\": {\n   \"description\": \"Fleet represents EnvoyFleet ID, which is deployed EnvoyFleet CustomResource name and namespace Optional, if missing will be automatically added by the Kusk Gateway with the discovery of the single fleet in the cluster (MutatingWebhookConfiguration for the API resource must be enabled).\",\n   \"properties\": {\n    \"name\": {\n     \"description\": \"deployed Envoy Fleet CR name\",\n     \"pattern\": \"^[a-z0-9-]{1,62}$\",\n     \"type\": \"string\"\n    },\n    \"namespace\": {\n     \"description\": \"deployed Envoy Fleet CR namespace\",\n     \"pattern\": \"^[a-z0-9-]{1,62}$\",\n     \"type\": \"string\"\n    }\n   },\n   \"required\": [\n    \"name\",\n    \"namespace\"\n   ],\n   \"type\": \"object\"\n  },\n  \"hosts\": {\n   \"description\": \"Hosts is a collection of vhosts the rules apply to. Defaults to \\\"*\\\" - vhost that matches all domain names.\",\n   \"items\": {\n    \"description\": \"Host is a vHost (and domain name) definition that is used during request routing. Could be wildcard (\\\"*\\\" - all vhosts), prefix/suffix wildcard (*-example.com, example.*, but not both *example*), or simple domain (www.example.com)\",\n    \"type\": \"string\"\n   },\n   \"type\": \"array\"\n  },\n  \"upstream\": {\n   \"description\": \"Upstream is a set of options of a target service to receive traffic.\",\n   \"properties\": {\n    \"host\": {\n     \"description\": \"UpstreamHost defines any DNS hostname with port that we can proxy to, even outside of the cluster\",\n     \"properties\": {\n      \"hostname\": {\n       \"description\": \"Hostname is the upstream hostname, without port.\",\n       \"type\": \"string\"\n      },\n      \"port\": {\n       \"description\": \"Port is the upstream port.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      }\n     },\n     \"required\": [\n      \"hostname\",\n      \"port\"\n     ],\n     \"type\": \"object\"\n    },\n    \"rewrite\": {\n     \"description\": \"Rewrite is the pattern (regex) and a substitution string that will change URL when request is being forwarded to the upstream service. e.g. given that Prefix is set to \\\"/petstore/api/v3\\\", and with Rewrite.Pattern is set to \\\"^/petstore\\\", Rewrite.Substitution is set to \\\"\\\" path that would be generated is \\\"/petstore/api/v3/pets\\\", URL that the upstream service would receive is \\\"/api/v3/pets\\\".\",\n     \"properties\": {\n      \"pattern\": {\n       \"type\": \"string\"\n      },\n      \"substitution\": {\n       \"type\": \"string\"\n      }\n     },\n     \"required\": [\n      \"pattern\",\n      \"substitution\"\n     ],\n     \"type\": \"object\"\n    },\n    \"service\": {\n     \"description\": \"UpstreamService defines K8s Service in the cluster\",\n     \"properties\": {\n      \"name\": {\n       \"description\": \"Name is the upstream K8s Service's name.\",\n       \"type\": \"string\"\n      },\n      \"namespace\": {\n       \"description\": \"Namespace where service is located\",\n       \"type\": \"string\"\n      },\n      \"port\": {\n       \"description\": \"Port is the upstream K8s Service's port.\",\n       \"format\": \"int32\",\n       \"type\": \"integer\"\n      }\n     },\n     \"required\": [\n      \"namespace\",\n      \"port\"\n     ],\n     \"type\": \"object\"\n    }\n   },\n   \"type\": \"object\"\n  }\n },\n \"required\": [\n  \"upstream\"\n ],\n \"title\": \"Static Route\",\n \"type\": \"object\"\n}"}